<?php

use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_entity_bundle_create().
 *
 * Could be in event after https://www.drupal.org/project/drupal/issues/2553169.
 */
function group_members_extra_entity_bundle_create($entity_type_id, $bundle) {
  // Only create config objects while config import is not in progress.
  if ($entity_type_id !== 'group_content' || \Drupal::isConfigSyncing()) {
    return;
  }

  // Load the entity type.
  $entity_type = \Drupal::entityTypeManager()
    ->getStorage('group_content_type')
    ->load($bundle);

  if (!$entity_type || $entity_type->getContentPluginId() !== 'group_membership') {
    return;
  }

  // Add the group_contact field to the newly added group content type. The
  // field storage for this is defined in the config/install folder.
  FieldConfig::create([
    'field_storage' => FieldStorageConfig::loadByName('group_content', 'group_contact'),
    'bundle' => $bundle,
    'label' => t('Group contact'),
    'description' => t('Members marked as group contact will be shown in the Contacts block on the Group page.'),
    'on_label' => t('Yes'),
    'off_label' => t('No'),
  ])->save();


  // Build or retrieve the 'default' form mode.
  if (!$form_display = EntityFormDisplay::load("group_content.$bundle.default")) {
    $form_display = EntityFormDisplay::create([
      'targetEntityType' => 'group_content',
      'bundle' => $bundle,
      'mode' => 'default',
      'status' => TRUE,
    ]);
  }

  // Assign widget settings for the 'default' form mode.
  $form_display->setComponent('group_contact', [
    'type' => 'boolean_checkbox',
  ])->save();

}
